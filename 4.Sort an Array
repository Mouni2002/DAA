#include<stdio.h>
#include<stdlib.h>
void merge(int arr[],int lb,int mid,int ub){
    int temp[100000];
    int i,j,k,m;

   
    i = lb;
    j = mid+1;
    k = lb;

    
    while(i<=mid && j<=ub){
        if (arr[i] <= arr[j]){
            temp[k] = arr[i];
            i++;
        }
        else{
            temp[k] = arr[j];
            j++;
        }
        k++;
    }

    if (i > mid){
        while(j <= ub){
            temp[k] = arr[j];
            j++;
            k++;
        }
    }
    else{
        while(i <= mid){
            temp[k] = arr[i];
            i++;
            k++;
        }
    }

   
    for(k=lb;k<=ub;k++){
        arr[k] = temp[k];
    }
}

void partition(int arr[],int lb,int ub){
    if (lb<ub){
        int mid = (lb+ub)/2;

        partition(arr,lb,mid);
        partition(arr,mid+1,ub);
        merge(arr,lb,mid,ub);
    }
}


int* sortArray(int* nums, int numsSize, int* returnSize){
    partition(nums,0,numsSize-1);
    *returnSize = numsSize;
    return nums;
}
void main(){
    int n,x=-1;
    int *returnsize=&x;
    printf("enter size");
    scanf("%d",&n);
    int nums[n];
    for(int i=0;i<n;i++){
        printf("enter elements");
        scanf("%d",&nums[i]);
    }

    sortArray(nums,n,returnsize);
    printf("after sorting\n [");
    for(int i=0;i<n;i++)
    {
        printf("%d",nums[i]);
    }
    printf("]");
}


o/p:

enter size4
enter elements5
enter elements2
enter elements3
enter elements1
after sorting
 [1235]
